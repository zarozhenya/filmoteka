{"mappings":"AAAA,IAAAA,EAAe,CACb,CAAEC,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,UACnB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,MAAOC,KAAM,SACnB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,IAAKC,KAAM,mBACjB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,GAAIC,KAAM,YCjBX,SAASC,GAAcC,MAC5BA,EAAKH,GACLA,EAAEI,YACFA,EAAWC,aACXA,EAAYC,UACZA,IAGA,MAAO,0DAC8CN,gDAGrCI,EACI,kCAAcA,IACd,yGAECD,0KAI6BA,6DAEb,IAArBG,EAAUC,OACND,EAAUC,QAAU,EAClBR,EACGS,QAAO,EAAGR,GAAIS,KACbH,EAAUI,SAASD,KAEpBE,KAAI,EAACV,KAAEA,KAAWA,IAClBW,KAAK,MACR,CACEb,EAAOc,MACL,EAAGb,GAAIc,KAAcA,IAAYR,EAAU,KAC3CL,KACFF,EAAOc,MACL,EAAGb,GAAIc,KAAcA,IAAYR,EAAU,KAC3CL,KACF,SACAW,KAAK,MACT,sBAElBP,EAAe,IAAIU,KAAKV,GAAcW,cAAgB,gECzC1D,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,qBAC7BC,QAASF,SAASC,cAAc,mBAChCE,YAAaH,SAASC,cAAc,sBAMtC,IAAIG,EAAQ,GACRC,EAAO,EACPC,EAAQ,GACRC,EAAgB,EAChBC,EAAe,EACfC,GAAgB,EAEpB,MAWMC,EAAqBC,UACzB,MAAMC,QAAYC,MAChB,iGAAsDR,KAElDS,QAAaF,EAAIG,OACvBC,QAAQC,IAAIH,GACZV,EAAQ,IAAIA,KAAUU,EAAKI,UAGvBC,EAAoBR,UACxB,MAAMC,QAAYC,MAChB,4FAAiDP,UAAcD,KAE3DS,QAAaF,EAAIG,OACvBR,GAAiBO,EAAKI,QAAQ9B,OAC9BoB,EAAeM,EAAKM,cAChBb,IAAkBC,GAlBtBV,EAAKK,YAAYkB,UAAUC,IAAI,UAqB/BlB,EAAQ,IAAIA,KAAUU,EAAKI,UAGvBK,EAAc,KAClB,MAAMC,EAASpB,EAAMZ,IAAIT,GAAeU,KAAK,MAC7CK,EAAKI,QAAQuB,UAAYD,GAarBE,EAAaf,UACbF,SACIU,IAENd,GAAQ,IAERA,GAAQ,QACFK,KAERa,KAGFzB,EAAKC,KAAK4B,iBAAiB,UAtBNC,IACnBA,EAAEC,iBAtCFxB,EAAO,EACPC,EAAQ,GACRC,EAAgB,EAChBC,EAAe,EACfJ,EAAQ,GACRN,EAAKK,YAAYkB,UAAUS,OAAO,UAmClCrB,GAAgB,EAChBH,EAAQsB,EAAEG,cAAcC,SAASC,MAAMC,MACnC5B,GACFoB,OAiBJ5B,EAAKK,YAAYwB,iBAAiB,QAASD,GAE3ChB,IAAqByB,KAAKZ","sources":["src/js/genres.js","src/js/templates.js","src/index.js"],"sourcesContent":["export default [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n","import genres from './genres';\n\nexport function getCardMarkup({\n  title,\n  id,\n  poster_path,\n  release_date,\n  genre_ids,\n}) {\n  const BASE_URL = 'https://image.tmdb.org/t/p/w780';\n  return `\n            <li class=\"movies-gallery__item\" data-id=${id}>\n              <img\n                src=\"${\n                  poster_path\n                    ? `${BASE_URL}${poster_path}`\n                    : 'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg'\n                }\"\n                alt=\"${title}\"\n                class=\"movies-gallery__img\"\n              />\n              <div class=\"movies-gallery__text\">\n                <h3 class=\"movies-gallery__title\">${title}</h3>\n                <p class=\"movies-gallery__genres\">${\n                  genre_ids.length !== 0\n                    ? genre_ids.length <= 3\n                      ? genres\n                          .filter(({ id: genreID }) =>\n                            genre_ids.includes(genreID)\n                          )\n                          .map(({ name }) => name)\n                          .join(', ')\n                      : [\n                          genres.find(\n                            ({ id: movieID }) => movieID === genre_ids[0]\n                          ).name,\n                          genres.find(\n                            ({ id: movieID }) => movieID === genre_ids[1]\n                          ).name,\n                          'Other',\n                        ].join(', ')\n                    : 'No information'\n                } | ${\n    release_date ? new Date(release_date).getFullYear() : 'No information'\n  }</p>\n              </div>\n            </li>`;\n}\n","import { getCardMarkup } from './js/templates';\n\nconst refs = {\n  form: document.querySelector('form.header__form'),\n  gallery: document.querySelector('.movies-gallery'),\n  loadMoreBtn: document.querySelector('.js-load-more-btn'),\n};\n\nconst KEY = '21a38995d1a0d82c48e261b573f88f7b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nlet items = [];\nlet page = 1;\nlet query = '';\nlet currentResult = 0;\nlet totalResults = 0;\nlet searchByQuery = false;\n\nconst reset = () => {\n  page = 1;\n  query = '';\n  currentResult = 0;\n  totalResults = 0;\n  items = [];\n  refs.loadMoreBtn.classList.remove('hidden');\n};\nconst hideButton = () => {\n  refs.loadMoreBtn.classList.add('hidden');\n};\nconst loadTrendingMovies = async () => {\n  const res = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}&page=${page}`\n  );\n  const data = await res.json();\n  console.log(data);\n  items = [...items, ...data.results];\n};\n\nconst loadMoviesByQuery = async () => {\n  const res = await fetch(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n  const data = await res.json();\n  currentResult += data.results.length;\n  totalResults = data.total_results;\n  if (currentResult === totalResults) {\n    hideButton();\n  }\n  items = [...items, ...data.results];\n};\n\nconst renderItems = () => {\n  const markup = items.map(getCardMarkup).join('\\n');\n  refs.gallery.innerHTML = markup;\n};\n\nconst onFormSubmit = e => {\n  e.preventDefault();\n  reset();\n  searchByQuery = true;\n  query = e.currentTarget.elements.query.value;\n  if (query) {\n    onLoadMore();\n  }\n};\n\nconst onLoadMore = async () => {\n  if (searchByQuery) {\n    await loadMoviesByQuery();\n\n    page += 1;\n  } else {\n    page += 1;\n    await loadTrendingMovies();\n  }\n  renderItems();\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.loadMoreBtn.addEventListener('click', onLoadMore);\n\nloadTrendingMovies().then(renderItems);\n"],"names":["$a9bf4680370b89e9$export$2e2bcd8739ae039","id","name","$56f2570fb838429e$export$812bcc5efcfe205e","title","poster_path","release_date","genre_ids","length","filter","genreID","includes","map","join","find","movieID","Date","getFullYear","$1f0dc3b9307be026$var$refs","form","document","querySelector","gallery","loadMoreBtn","$1f0dc3b9307be026$var$items","$1f0dc3b9307be026$var$page","$1f0dc3b9307be026$var$query","$1f0dc3b9307be026$var$currentResult","$1f0dc3b9307be026$var$totalResults","$1f0dc3b9307be026$var$searchByQuery","$1f0dc3b9307be026$var$loadTrendingMovies","async","res","fetch","data","json","console","log","results","$1f0dc3b9307be026$var$loadMoviesByQuery","total_results","classList","add","$1f0dc3b9307be026$var$renderItems","markup","innerHTML","$1f0dc3b9307be026$var$onLoadMore","addEventListener","e","preventDefault","remove","currentTarget","elements","query","value","then"],"version":3,"file":"index.f6408269.js.map"}